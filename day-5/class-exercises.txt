Session 1: [40]
---------------------------------------------------------------------------------------------------

1. Write a function to return the time required to double the invested amount and given rate of 
   interest
2. Write a function to find the second largest number in the list
   Example: Input <- [34, 56, 67, 43]
            Outupt -> 56
3. Write a function to print charecter pyramid
   Example: genPyramic(3, '*')
                 *
                ***
               *****


Session 2: [40]
---------------------------------------------------------------------------------------------------

1. Write a functions that returns the jumbled version of the words with spaces and capital letters
   Example: Input <- jumble("apples")
            Output -> P P L A E S 
2. Write a function to determine if a number is a fibonacci number
   Example: Input <- 8
            OUtput -> 8 is in the fibonacci range
3. Write a python function to merge two dictionaries
   Example: d1 = { 'a': 20, 'b': 30 }
            d2 = { 'b': 40, 'c': 50 }
            Output -> { 'a' : 20, 'b':70, 'c' : 50 }
    Merge rules: Numbers -> add
                 Strings -> concatenate
                 List, set -> Merge
                 Tuple -> List of tuples
                 Dictionary -> Merge

4. Write a function that takes a mix of numbers and categorizes them into positives, negatives, and zeros. 
   It should return the count of each category and their respective sums.
5. Create a function authenticator(username, password) that returns another function, 
   which can be called to access a secure message only if the username and password match.


Session 3: [40]
---------------------------------------------------------------------------------------------------

1. Write a recursive function to compute the nth Fibonacci number.
2. Write a recursive function to compute the factorial of a number. 
3. Generate all the subsets of a given set - explore and explain
    Input: generate_subsets([1, 2, 3])
    Output: []
            [3]
            [2]
            [2, 3]
            [1]
            [1, 3]
            [1, 2]
            [1, 2, 3]
4. Write a function that takes any number of lists and returns a list of elements that are common to all.

    # Example usage:
    list1 = [1, 2, 3, 4, 5]
    list2 = [2, 3, 5, 7, 9]
    list3 = [1, 2, 5, 8, 10]

    print(find_common(list1, list2, list3))

